#287 Find the duplicate number 


Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

 

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
Example 2:

Input: nums = [3,1,3,4,2]
Output: 3
 



#Solution


class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        
        int size = nums.size();
        unordered_map<int, int> count;
        
        for(int i = 0; i < size; i++){
            int currentElement = nums[i];
            count[currentElement]++;
        }
        
        for(int i = 0; i < size; i++){
            if(count[nums[i]] > 1){
                return nums[i];
            }
        }
        return -1;
    }
};